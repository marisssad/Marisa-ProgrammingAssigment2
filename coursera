## Put comments here that give an overall description of what your
## functions do

## Write a short comment describing this function

makeCacheMatrix <- function(x = matrix()) {
  
  ##the function creates a special matrix object that can cache its inverse

    inv<-NULL
    set<-function(y){
      x<<-y
      inv<<-NULL
      
    }
    get<-function() x
    setinverse<-function(inverse)inv<<-inverse
    getinverse<-function() {
      inver<-ginv(x)
      inver%*%x
    }
    list(set=set,get=get,setinverse=setinverse,getinverse=getinverse)
  }


## Write a short comment describing this function
##This function computes the inverse of the special matrix returned by the previous function
##If the inverse has already been calculated(the matrix hasnt changed)then the cachesolve function should retrieve the inverse from the cache

cacheSolve <- function(x, ...) {
        ## Return a matrix that is the inverse of "x"
inv<-x$getinverse()
if(!is.null(inv)){
  message ("Getting cached data")
  return(inv)
  
}
data<-x$get() 
inv<-solve(data,...)
x$set_inverse(inv)
inv
}
